---
layout: post
title:  "C++ 유클리드 호제법"
# image:  02.jpg
tags:   C++

---

### 개요
유클리드 호제법이란 두 수의 최대공약수(GCD)를 구하는 하나의 알고리즘이다.
고대 그리스 수학자 유클리드가 제시한 알고리즘으로, 두 수의 나누어떨어지는 관계를 반복적으로 활용하여 가장 큰 공약수를 빠르게 구할 수 있다.
### 원리
두 수 a와 b에 대해, a가 b로 나누어떨어지지 않으면, 그 나머지를 구하고, 그 나머지와 b로 최대공약수를 구하는 방식입니다. 이 과정을 반복해서 나머지가 0이 될 때까지 진행하면, 그때의 b가 a와 b의 최대 공약수입니다.

### 알고리즘 과정
1. 두 수 a와 b가 주어졌을 때, a를 b로 나눈 나머지 r을 구합니다.
2. 만약 r = 0이면, b가 a와 b의 최대공약수입니다.
3. r = 0이면, b와 r의 최대공약수를 구하기 위해 1단계로 돌아갑니다.

```cpp
#include <iostream>

using namespace std;

int gcd(int a, int b) 
{
    while (b != 0) 
    {
        int r = a % b;
        a = b; 
        b = r;
    }
    return a;
}

int main()
{
    int a, b;
    cout << "두 수를 입력하세요: ";
    cin >> a >> b;

    cout << "두 수의 최대공약수는: " << gcd(a, b) << endl;
    return 0;
}
```

<a href="https://www.acmicpc.net/problemset?sort=ac_desc&algo=26"> <img src="https://d2gd6pc034wcta.cloudfront.net/images/logo@2x.png" alt="Logo" style="border-radius: 50%; width: 100px; height: 100px;"> 문제 링크 </a>
