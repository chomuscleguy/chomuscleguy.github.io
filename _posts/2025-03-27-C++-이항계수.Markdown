---
layout: post
title:  "이항 계수"
image:  C++.png
tags:   C++ Algorithm, DP
use_math: true	
---
### 개요 :
이항 계수(Binomial Coefficient)란, 주어진 자연수 \( n \)과 \( k \)에 대해 “\( n \)개 중에서 \( k \)개를 고르는 방법의 수”를 나타내는 값입니다. 이는 보통 **조합**(Combination)으로 불리며, 수학적으로 다음과 같이 정의됩니다:

$$
C(n, k) = \frac{n!}{k!(n-k)!}
$$

여기서:
- \( C(n, k) \)는 \( n \)개 중에서 \( k \)개를 선택하는 경우의 수입니다.
- \( n! \)은 \( n \)의 팩토리얼로, \( n \times (n-1) \times \cdots \times 1 \)을 의미합니다.
- 팩토리얼을 이용한 계산을 통해 **조합**을 구할 수 있습니다.

### 원리 :
이항 계수는 다양한 방식으로 계산할 수 있습니다. 대표적인 방법으로는 **팩토리얼을 이용하는 방법**과 **반복문을 이용한 직접 계산 방법**이 있습니다.

1. **팩토리얼을 이용한 계산**:
    이 방법은 가장 기본적인 계산법으로, \( C(n, k) \)는 다음과 같은 식으로 구할 수 있습니다:

    \[
    C(n, k) = \frac{n!}{k!(n-k)!}
    \]

2. **반복문을 이용한 직접 계산**:
    이 방법은 팩토리얼을 직접 계산하는 대신, 연속적인 나누기와 곱셈을 이용하여 계산하는 방식입니다. 이 방식은 \( O(k) \) 시간 복잡도로 최적화된 방법입니다.

    \[
    C(n, k) = \prod_{i=1}^{k} \frac{n - i + 1}{i}
    \]

### 사용 조건 :
이항 계수를 계산하는 데는 몇 가지 조건이 있습니다:

1. \( n \)과 \( k \)는 자연수여야 합니다.
2. \( k \leq n \)이어야 합니다.
3. \( n \)과 \( k \)가 커질 경우, 팩토리얼 계산에 필요한 값들이 매우 커질 수 있으므로 계산 효율성을 고려한 알고리즘을 선택하는 것이 중요합니다.

### C++ 코드 예시:

```cpp
#include <iostream>

using namespace std;

int binomialCoefficient(int n, int k) {
    if (k > n) return 0;
    if (k == 0 || k == n) return 1;

    if (k > n - k) k = n - k; // 대칭성 이용

    long long result = 1;
    for (int i = 1; i <= k; ++i) {
        result *= n--;
        result /= i;
    }
    return result;
}

int main() {
    int n, k;
    cin >> n >> k;

    cout << binomialCoefficient(n, k) << endl;
    return 0;
}
```	

<br>
<div style="display: inline-flex; align-items: center; justify-content: center;">
  <a style="text-decoration: none; color: black; font-weight: bold;">
    문제 풀어보기 :
  </a>
  <a href="https://www.acmicpc.net/problem/11050" target="_blank" style="display: inline-block; margin-left: 5px; text-decoration: none; font-size: 25px;">
    BeakJoon
  </a>
</div>
